var active;
var active_parent;

$.fn.extend({
    treed: function (o) {
      
      var openedClass = 'glyphicon-minus-sign';
      var closedClass = 'glyphicon-plus-sign';
      
      if (typeof o != 'undefined'){
        if (typeof o.openedClass != 'undefined'){
        openedClass = o.openedClass;
        }
        if (typeof o.closedClass != 'undefined'){
        closedClass = o.closedClass;
        }
      };
      
        //initialize each of the top levels
        var tree = $(this);
        tree.addClass("tree");
        tree.find('li').has("ul").each(function () {
            var branch = $(this); //li with children ul
            branch.prepend("<i class='indicator glyphicon " + closedClass + "'></i>");
            branch.addClass('branch');
            branch.on('click', function (e) {
                if (this == e.target) {
                    var icon = $(this).children('i:first');
                    icon.toggleClass(openedClass + " " + closedClass);
                    $(this).children().children().toggle();
                }
            })
            branch.children().children().toggle();
        });
        //fire event from the dynamically added icon
        tree.find('.branch .indicator').each(function(){
            $(this).on('click', function () {
                $(this).closest('li').click();
            });
        });
        //fire event to open branch if the li contains an anchor instead of text
        tree.find('.branch>a').each(function () {
            $(this).on('click', function (e) {
            	$(".tree a.active").toggleClass("active");
            	$(this).addClass("active");
                console.log("set active");
                // let parentUl = $(this).closest("ul");
                $(".tree .wfid_updating_subtree").toggleClass("wfid_updating_subtree");
                if (! $(this).hasClass("treed")){
                    $(this).addClass("wfid_updating_subtree");
                }
            	// active = $(this);
                // $(this).closest('li').click();
                e.preventDefault();
            });
        });
        //fire event to open branch if the li contains a button instead of text
        tree.find('.branch>button').each(function () {
            $(this).on('click', function (e) {
                $(this).closest('li').click();
                e.preventDefault();
            });
        });
    },

    open_last_active: function (o) {
    	// let parents=$("."+active_parent).parentsUntil("#tree","li");
        console.log("last active:", active_parent);
    	last_parent=$('.tree a').filter(function(){ return $(this).text() === active_parent;})
    	for (let p of last_parent.parentsUntil("#tree","li")) {
    		let p_i=$(p).find("i:first");
    		if (p_i) {
    			p_i.click()
    		};
    	};
    	last_parent.addClass("active")
    },

    save_parent: function (o) {
    	active_parent=$(".wfid_add_block").val();
    },

    remove_active: function (o) {
        $("a.active").parent().remove();
    },

    remove_tree: function (o) {
        var clickedParentUl = $("a.active").closest("ul")
        var parentA = clickedParentUl.parent().closest("ul").find("a:first");
        clickedParentUl.siblings("ul").remove();
        clickedParentUl.remove();
        console.log("parent removed");
        $(".tree .wfid_updating_subtree").toggleClass("wfid_updating_subtree");
        parentA.removeClass("treed");
        // parentA.treed()
        parentA.click();
        setTimeout(()=> {parentA.siblings("ul").treed()}, 500);
        // parentA.addClass("wfid_updating_subtree");
        // $("a.active").parent().remove();
    },

    update_tree: function (o) {
        var clickedParent = $('.wfid_updating_subtree').closest("ul");
        $('.wfid_updating_subtree').addClass("treed").removeClass("not-tree");
        if (clickedParent.length > 0 && ! clickedParent.hasClass("treed")){
            console.log("update_tree treed");
            // $(".tree .wfid_updating_subtree_input").remove();
            clickedParent.treed()
            clickedParent.addClass("treed");
            // $('.wfid_updating_subtree').addClass("treed");
            // var $new = $( "<input type='test' class='wfid_updating_subtree_input hidden' value='1'>" )
            // $('.wfid_updating_subtree').append($new);
        }
    }
});



//Initialization of treeviews

// $('#tree1').treed();
// $('#tree2').treed({openedClass:'glyphicon-folder-open', closedClass:'glyphicon-folder-close'});
// $('#tree3').treed({openedClass:'glyphicon-chevron-right', closedClass:'glyphicon-chevron-down'});
